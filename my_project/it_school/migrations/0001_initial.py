# Generated by Django 5.1.7 on 2025-03-08 16:36

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import multiselectfield.db.fields
import phonenumber_field.modelfields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AboutSchool',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('name_ru', models.CharField(max_length=200, null=True)),
                ('name_ky', models.CharField(max_length=200, null=True)),
                ('school_description', models.TextField()),
                ('school_description_ru', models.TextField(null=True)),
                ('school_description_ky', models.TextField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AboutUs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('title_ru', models.CharField(max_length=100, null=True)),
                ('title_ky', models.CharField(max_length=100, null=True)),
                ('description', models.TextField()),
                ('description_ru', models.TextField(null=True)),
                ('description_ky', models.TextField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ContactInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None)),
                ('email', models.CharField(max_length=64)),
                ('address', models.CharField(max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name='It',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('title_ru', models.CharField(max_length=100, null=True)),
                ('title_ky', models.CharField(max_length=100, null=True)),
                ('description', models.TextField()),
                ('description_ru', models.TextField(null=True)),
                ('description_ky', models.TextField(null=True)),
                ('image', models.ImageField(upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('age', models.PositiveSmallIntegerField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(12), django.core.validators.MaxValueValidator(70)])),
                ('type', models.CharField(choices=[('admin', 'admin'), ('student', 'student')], default='admin', max_length=100)),
                ('status', models.CharField(choices=[('man', 'Man'), ('woman', 'Woman')], default='woman', max_length=10)),
                ('country', models.CharField(max_length=100)),
                ('city', models.CharField(max_length=100)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AboutUsImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='')),
                ('about_us', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='it_school.aboutus')),
            ],
        ),
        migrations.CreateModel(
            name='Certificate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('certificate', models.ImageField(upload_to='certificate_image')),
                ('about_us', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='certificate', to='it_school.aboutus')),
            ],
        ),
        migrations.CreateModel(
            name='Courses',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_name', models.CharField(max_length=100)),
                ('course_name_ru', models.CharField(max_length=100, null=True)),
                ('course_name_ky', models.CharField(max_length=100, null=True)),
                ('description', models.TextField()),
                ('description_ru', models.TextField(null=True)),
                ('description_ky', models.TextField(null=True)),
                ('access', models.CharField(max_length=100)),
                ('access_ru', models.CharField(max_length=100, null=True)),
                ('access_ky', models.CharField(max_length=100, null=True)),
                ('about_school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='courses', to='it_school.aboutschool')),
            ],
        ),
        migrations.CreateModel(
            name='AboutCourses',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('description_ru', models.TextField(null=True)),
                ('description_ky', models.TextField(null=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='about_courses', to='it_school.courses')),
                ('course_ky', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='about_courses', to='it_school.courses')),
                ('course_ru', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='about_courses', to='it_school.courses')),
            ],
        ),
        migrations.CreateModel(
            name='Articles',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='article_image')),
                ('title', models.CharField(max_length=100)),
                ('title_ru', models.CharField(max_length=100, null=True)),
                ('title_ky', models.CharField(max_length=100, null=True)),
                ('description', models.TextField()),
                ('description_ru', models.TextField(null=True)),
                ('description_ky', models.TextField(null=True)),
                ('created_date', models.DateField(auto_now_add=True)),
                ('it', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='articles', to='it_school.it')),
            ],
        ),
        migrations.CreateModel(
            name='MasterClass',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('title_ru', models.CharField(max_length=100, null=True)),
                ('title_ky', models.CharField(max_length=100, null=True)),
                ('description', models.TextField()),
                ('description_ru', models.TextField(null=True)),
                ('description_ky', models.TextField(null=True)),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='master_class', to='it_school.aboutschool')),
            ],
        ),
        migrations.CreateModel(
            name='Paket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('title_ru', models.CharField(max_length=100, null=True)),
                ('title_ky', models.CharField(max_length=100, null=True)),
                ('description', models.TextField()),
                ('description_ru', models.TextField(null=True)),
                ('description_ky', models.TextField(null=True)),
                ('time', models.CharField(max_length=100)),
                ('price', models.CharField(max_length=100)),
                ('choices', models.CharField(choices=[('Ежемесячно', 'Ежемесячно'), ('Ежегодно', 'Ежегодно')], default='Ежегодно', max_length=100)),
                ('status', multiselectfield.db.fields.MultiSelectField(choices=[('Все статьи', 'Все статьи'), ('Все мастер классы', 'Все мастер классы'), ('6 новых статей каждый месяц', '6 новых статей каждый месяц'), ('Доступ к курсу “DevOps - инженер”', 'Доступ к курсу “DevOps - инженер”')], max_length=90)),
                ('about_school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='packets', to='it_school.aboutschool')),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('title_ru', models.CharField(max_length=100, null=True)),
                ('title_ky', models.CharField(max_length=100, null=True)),
                ('question', models.CharField(max_length=100)),
                ('question_ru', models.CharField(max_length=100, null=True)),
                ('question_ky', models.CharField(max_length=100, null=True)),
                ('description', models.TextField()),
                ('description_ru', models.TextField(null=True)),
                ('description_ky', models.TextField(null=True)),
                ('course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='question_course', to='it_school.courses')),
                ('it', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='question_it', to='it_school.it')),
                ('master_class', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='question_master', to='it_school.masterclass')),
                ('paket', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='question_paket', to='it_school.paket')),
            ],
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('title_ru', models.CharField(max_length=100, null=True)),
                ('title_ky', models.CharField(max_length=100, null=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('description_ru', models.TextField(null=True)),
                ('description_ky', models.TextField(null=True)),
                ('image', models.ImageField(upload_to='rating_image')),
                ('about_school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='school_rating', to='it_school.aboutschool')),
                ('about_us', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='rating_about', to='it_school.aboutus')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rating_course', to='it_school.courses')),
                ('master_class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rating_master', to='it_school.masterclass')),
            ],
        ),
        migrations.CreateModel(
            name='SocialNetwork',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('network_name', models.CharField(max_length=64)),
                ('network_url', models.URLField()),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contact', to='it_school.contactinfo')),
            ],
        ),
    ]
